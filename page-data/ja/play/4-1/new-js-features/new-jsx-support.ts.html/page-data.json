{"componentChunkName":"component---src-templates-play-example-tsx","path":"/ja/play/4-1/new-js-features/new-jsx-support.ts.html","result":{"pageContext":{"name":"New JSX Support","title":"New JSX Support","lang":"ja","html":"\n Reactのバージョン17には、JSXを変換する際に\n 出力されるJavaScriptに新しい形式が導入されました。\n 出力されたJavaScriptはプレイグラウンド右側の\n \".JS\"タブで確認できます。\n\n<code><pre>\nimport { useState } from \"react\";\n\nexport function ExampleApp() {\n  const [count, setCount] = useState(0);\n\n  return (\n    <div>\n      <p>You clicked {count} times</p>\n      <button onClick={() => setCount(count + 1)}>Click me</button>\n    </div>\n  );\n}\n\n</pre></code>\n// 以下は、主な変更点の抜粋です:\n\n - React識別子の代わりとなる関数が、`import`を介して提供される\n - 単一要素(jsx)と複数の子要素(jsxs)にそれぞれ異なる関数が使用される\n - keyがpropsから切り離される\n\n 上記の変更が実装されているRFCは以下で読むことができます:\n https://github.com/reactjs/rfcs/blob/createlement-rfc/text/0000-create-element-changes.md\n\n こうした変更のほとんどは内部的なものであり、\n エンドユーザーがJSXのコードを記述することに\n 影響はありません。\n","redirectHref":"ja/play/?ts=4.1.0-dev.20201028&jsx=4#example/new-jsx-support"}},"staticQueryHashes":[]}