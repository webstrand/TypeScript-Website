{"version":3,"sources":["webpack://typescriptlang-org/./src/components/QuickJump.tsx","webpack://typescriptlang-org/./src/templates/pages/docs/index.tsx"],"names":["QuickJump","props","intl","useIntl","releaseURL","createInternational","withPrefix","releaseInfo","betaURL","undefined","IntlLink","createIntlLink","lang","className","style","textAlign","title","to","marginTop","href","Index","i","nav","getDocumentationNavForLanguage","pageContext","RenderItems","items","map","item","path","permalink","key","id","Link","description","navRoot","showIntro","oneline","locale"],"mappings":"yNAcaA,EAAY,SAACC,GACxB,IAAMC,GAAOC,SAIPC,IAHIC,OAAoCH,IAG3BI,gBAAWC,OAC1BC,OAA8BC,EAC9BF,OAAoBC,EAAUD,MAC9BA,OAAkBC,EAAUD,MAEhC,IAAMG,GAAWC,OAAeV,EAAMW,MAGtC,OAAO,uBAAKC,UAAU,sBACpB,sBAAIC,MAAO,CAAEC,UAAW,WAAad,EAAMe,OAC3C,uBAAKH,UAAU,WACb,uBAAKA,UAAU,eACb,yCACA,0BACE,0BACE,gBAACH,EAAD,CAAUO,GAAG,mBAAb,2BAIF,0BACE,gBAACP,EAAD,CAAUO,GAAG,+CAAb,aAIF,0BACE,gBAACP,EAAD,CAAUO,GAAG,+CAAb,uBAIF,0BACE,gBAACP,EAAD,CAAUO,GAAG,mDAAb,cAIF,0BACE,gBAACP,EAAD,CAAUO,GAAG,oDAAb,qBAIF,0BAAI,gBAACP,EAAD,CAAUO,GAAG,aAAb,mBAIR,uBAAKJ,UAAU,eACb,sCACA,0BACE,0BACE,gBAACH,EAAD,CAAUO,GAAG,mCAAb,gBAIF,0BACE,gBAACP,EAAD,CAAUO,GAAG,sCAAb,mBAIF,0BACE,gBAACP,EAAD,CAAUO,GAAG,kCAAb,eAIF,0BACE,gBAACP,EAAD,CAAUO,GAAG,6CAAb,0BAIF,0BACE,gBAACP,EAAD,CAAUO,GAAG,iCAAb,gBAKN,uBAAKJ,UAAU,eACb,mCACA,0BACE,0BAAI,gBAACH,EAAD,CAAUO,GAAG,UAAb,eACJ,0BAAI,gBAACP,EAAD,CAAUO,GAAG,cAAb,wBAEN,sBAAIH,MAAO,CAAEI,UAAW,SAAxB,iBACA,0BACGV,EACG,0BACA,qBAAGW,KAAMX,GAAT,sBACsBD,QADtB,MAIA,KACJ,0BACE,gBAACG,EAAD,CAAUO,GAAIb,GAAd,iBACiBG,YAMvB,uBAAKM,UAAU,eACb,uCACA,0BACE,0BACE,gBAACH,EAAD,CAAUO,GAAG,oCAAb,YAEF,0BACE,gBAACP,EAAD,CAAUO,GAAG,iDAAb,sBAIF,0BACE,gBAACP,EAAD,CAAUO,GAAG,wCAAb,yBAIF,0BACE,gBAACP,EAAD,CAAUO,GAAG,uCAAb,0B,2HC9GNG,EAAyB,SAACnB,GAC9B,IAAMoB,GAAIhB,QAAoCF,UACxCmB,GAAMC,QAA+BtB,EAAMuB,YAAYZ,MAEvDa,EAAc,SAAdA,EAAe,GAAe,IAAbC,EAAY,EAAZA,MACrB,OAAKA,EAAMA,MAEJA,EAAMA,OAASA,EAAMA,MAAMC,KAAI,SAAAC,GACpC,IAAMC,EAAOD,EAAKE,UAClB,OAAIF,EAAKF,MACA,gCACL,sBAAIK,IAAKH,EAAKI,IAAKJ,EAAKZ,OACxB,0BAAI,0BAAI,gBAACS,EAAD,CAAaC,MAAOE,OAIzB,sBAAIG,IAAKH,EAAKI,IACnB,gBAAC,EAAAC,KAAD,CAAMhB,GAAIY,GAAOD,EAAKZ,WAZD,MAkB3B,OACE,gBAAC,IAAD,CAAQA,MAAOK,EAAE,oBAAqBa,YAAab,EAAE,0BAA2BT,KAAMX,EAAMuB,YAAYZ,MAEtG,uBAAKC,UAAU,8BAA8BC,MAAO,CAAEI,UAAW,SAC/D,uDAGF,uBAAKL,UAAU,iDACb,uBAAKA,UAAU,gBACZS,EAAIK,KAAI,SAAAQ,GACP,GAAmB,eAAfA,EAAQH,GAAqB,OAAO,KACxC,IAAMI,EAA2B,aAAfD,EAAQH,GAE1B,OACE,uBAAKnB,UAAU,cAAckB,IAAKI,EAAQH,IAExC,0BAAKG,EAAQnB,OACb,yBAAImB,EAAQE,SAAW,KAEvB,0BACE,gBAACZ,EAAD,CAAaC,MAAOS,KAGrBC,GAAa,4CAAmB,qBAAGjB,KAAK,oCAAR,QAAnB,QAA2E,qBAAGA,KAAK,mCAAR,OAA3E,mCAOxB,gBAAC,IAAD,CAAWH,MAAOK,EAAE,gBAAiBT,KAAMX,EAAMuB,YAAYZ,SAKnE,mBAAgBX,GAAD,OACb,gBAAC,IAAD,CAAMqC,OAAQrC,EAAMuB,YAAYZ,MAC9B,gBAACQ,EAAUnB,M","file":"component---src-templates-pages-docs-index-tsx-abe121c88bef479e72fa.js","sourcesContent":["import * as React from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { createInternational } from \"../lib/createInternational\";\nimport { docCopy } from \"../copy/en/documentation\";\nimport { createIntlLink } from \"./IntlLink\";\n\n// Automatic metadata from npm and VS Marketplace\nimport releaseInfo from \"../lib/release-info.json\";\nimport { withPrefix } from \"gatsby\";\n\nexport type Props = {\n  title: string;\n  lang: string;\n};\nexport const QuickJump = (props: Props) => {\n  const intl = useIntl();\n  const i = createInternational<typeof docCopy>(intl);\n  i;\n\n  const releaseURL = withPrefix(releaseInfo.releaseNotesURL);\n  let betaURL: string | undefined = undefined;\n  if (releaseInfo.isBeta) betaURL = releaseInfo.betaPostURL;\n  if (releaseInfo.isRC) betaURL = releaseInfo.rcPostURL;\n\n  const IntlLink = createIntlLink(props.lang);\n\n  // TODO: Internationalize these strings\n  return <div className=\"main-content-block\">\n    <h2 style={{ textAlign: \"center\" }}>{props.title}</h2>\n    <div className=\"columns\">\n      <div className=\"item raised\">\n        <h4>Get Started</h4>\n        <ul>\n          <li>\n            <IntlLink to=\"/docs/bootstrap\">\n              Bootstrap a TS project\n            </IntlLink>\n          </li>\n          <li>\n            <IntlLink to=\"/docs/handbook/typescript-in-5-minutes.html\">\n              JS to TS\n            </IntlLink>\n          </li>\n          <li>\n            <IntlLink to=\"/docs/handbook/typescript-from-scratch.html\">\n              New to Programming\n            </IntlLink>\n          </li>\n          <li>\n            <IntlLink to=\"/docs/handbook/typescript-in-5-minutes-oop.html\">\n              OOP to JS\n            </IntlLink>\n          </li>\n          <li>\n            <IntlLink to=\"/docs/handbook/typescript-in-5-minutes-func.html\">\n              Functional to JS\n            </IntlLink>\n          </li>\n          <li><IntlLink to=\"/download\">Installation</IntlLink></li>\n        </ul>\n      </div>\n\n      <div className=\"item raised\">\n        <h4>Handbook</h4>\n        <ul>\n          <li>\n            <IntlLink to=\"/docs/handbook/basic-types.html\">\n              Basic Types\n            </IntlLink>\n          </li>\n          <li>\n            <IntlLink to=\"/docs/handbook/advanced-types.html\">\n              Advanced Types\n            </IntlLink>\n          </li>\n          <li>\n            <IntlLink to=\"/docs/handbook/interfaces.html\">\n              Interfaces\n            </IntlLink>\n          </li>\n          <li>\n            <IntlLink to=\"/docs/handbook/variable-declarations.html\">\n              Variable Declarations\n            </IntlLink>\n          </li>\n          <li>\n            <IntlLink to=\"/docs/handbook/functions.html\">Functions</IntlLink>\n          </li>\n        </ul>\n      </div>\n\n      <div className=\"item raised\">\n        <h4>Tools</h4>\n        <ul>\n          <li><IntlLink to=\"/play/\">Playground</IntlLink></li>\n          <li><IntlLink to=\"/tsconfig/\">TSConfig Reference</IntlLink></li>\n        </ul>\n        <h4 style={{ marginTop: \"28px\" }}>Release Notes</h4>\n        <ul>\n          {betaURL\n            ? <li>\n              <a href={betaURL}>\n                What's upcoming in {releaseInfo.tags.betaMajMin}?\n              </a>\n            </li>\n            : null}\n          <li>\n            <IntlLink to={releaseURL}>\n              What's new in {releaseInfo.tags.stableMajMin}\n            </IntlLink>\n          </li>\n        </ul>\n      </div>\n\n      <div className=\"item raised\">\n        <h4>Tutorials</h4>\n        <ul>\n          <li>\n            <IntlLink to=\"/docs/handbook/asp-net-core.html\">ASP.NET</IntlLink>\n          </li>\n          <li>\n            <IntlLink to=\"/docs/handbook/migrating-from-javascript.html\">\n              Migrating from JS\n            </IntlLink>\n          </li>\n          <li>\n            <IntlLink to=\"/docs/handbook/dom-manipulation.html\">\n              Working with the DOM\n            </IntlLink>\n          </li>\n          <li>\n            <IntlLink to=\"/docs/handbook/react-&-webpack.html\">\n              React &amp; Webpack\n            </IntlLink>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>;\n};\n","import * as React from \"react\";\nimport { Layout } from \"../../../components/layout\";\n\nimport \"../css/documentation.scss\";\nimport { Intl } from \"../../../components/Intl\";\n\nimport { docCopy } from \"../../../copy/en/documentation\";\nimport { createInternational } from \"../../../lib/createInternational\";\nimport { useIntl } from \"react-intl\";\nimport { QuickJump } from \"../../../components/QuickJump\";\nimport { getDocumentationNavForLanguage } from \"../../../lib/documentationNavigation\"\n\nimport { Link } from \"gatsby\"\n\nimport \"../css/documentation.scss\"\nimport \"../../documentation.scss\"\n\ntype Props = {\n  pageContext: any;\n};\n\nconst Index: React.FC<Props> = (props) => {\n  const i = createInternational<typeof docCopy>(useIntl());\n  const nav = getDocumentationNavForLanguage(props.pageContext.lang)\n\n  const RenderItems = ({ items }) => {\n    if (!items.items) return null\n\n    return items.items && items.items.map(item => {\n      const path = item.permalink!\n      if (item.items) {\n        return <> \n          <li key={item.id}>{item.title}</li>\n          <li><ul><RenderItems items={item}/></ul></li>\n        </>\n      } else {\n\n      return <li key={item.id}>\n        <Link to={path}>{item.title}</Link>\n       </li>\n      }\n    })\n  }\n  \n  return (\n    <Layout title={i(\"doc_layout_title\")} description={i(\"doc_layout_description\")} lang={props.pageContext.lang}>\n\n      <div className=\"main-content-block headline\" style={{ marginTop: \"40px\" }}>\n        <h1>TypeScript Documentation</h1>\n      </div>\n\n      <div className=\"main-content-block container handbook-content\" >\n        <div className=\"columns wide\">\n          {nav.map(navRoot => {\n            if (navRoot.id === \"what's-new\") return null\n            const showIntro = navRoot.id === \"handbook\"\n\n            return (\n              <div className=\"item raised\" key={navRoot.id}>\n\n                <h4>{navRoot.title}</h4>\n                <p>{navRoot.oneline || \" \"}</p>\n\n                <ul>\n                  <RenderItems items={navRoot} />\n                </ul>\n\n                {showIntro && <p>We also have an <a href='/assets/typescript-handbook.epub'>epub</a> and <a href='/assets/typescript-handbook.pdf'>pdf</a> version of the Handbook.</p>}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n\n      <QuickJump title={i(\"doc_headline\")} lang={props.pageContext.lang} />\n    </Layout>\n  );\n};\n\nexport default (props: Props) => (\n  <Intl locale={props.pageContext.lang}>\n    <Index {...props} />\n  </Intl>\n);\n"],"sourceRoot":""}